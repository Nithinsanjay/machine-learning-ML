from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn import tree
import matplotlib.pyplot as plt

# Define the dataset and labels
X = [[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7]]
y = ['A', 'B', 'A', 'B', 'A', 'B']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create the Decision Tree classifier
clf = DecisionTreeClassifier()

# Train the classifier on the training data
clf.fit(X_train, y_train)

# Make predictions on the test data
y_pred = clf.predict(X_test)

# Evaluate the model's performance
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

# Plot the Decision Tree
plt.figure(figsize=(12, 6))
tree.plot_tree(clf, filled=True, feature_names=[f"Feature {i}" for i in range(1, len(X[0])+1)], class_names=list(set(y)))
plt.show()
